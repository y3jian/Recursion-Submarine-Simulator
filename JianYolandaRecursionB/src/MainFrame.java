/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.awt.Graphics;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.PointerInfo;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Timer;
/**
 *
 * @author yolandajian
 */
public class MainFrame extends javax.swing.JFrame {
    
    boolean subPressed = false;
    boolean haidaPressed = false;
    int xSub = 0;
    int ySub = 0;
    public static int xHaida = 0;
    public static int yHaida = 0;
    public static int subSpeed = 0;
    public static int haidaSpeed = 0;
    char typeArr[] = {'i', 'd', 's'};
    DrawingArea draw = new DrawingArea();

    /**
     * Creates new form MainFrame
     */
    
    public MainFrame() {
        initComponents();
       
    }

    //For error checking 
    static boolean typeVerify(String elementCur, char arrCur) {
        boolean correct = false;
        switch (arrCur) {
            case 'i':
                try {
                    int typeInt = Integer.parseInt(elementCur);//converting to int
                    correct = true;

                } catch (NumberFormatException e) {//catching the error
                    correct = false;
                }
                break;

            case 'd':
                try {
                    double typeDouble = Double.parseDouble(elementCur);
                    correct = true;
                } catch (NumberFormatException e) {
                    correct = false;
                }
                break;

            case 's':

                for (int i = 0; i <= elementCur.length(); i++) {
                    //uppercase 65 to 90 lowercase 97 to 122
                    if (elementCur.charAt(i) >= 65 && elementCur.charAt(i) <= 90 || elementCur.charAt(i) >= 97 && elementCur.charAt(i) <= 122) {
                        correct = true;
                        break;
                    } else {
                        correct = false;
                        break;
                    }
                }
        }
        return correct;
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        drawingArea1 = new DrawingArea();
        subSpeedSlider = new javax.swing.JSlider();
        haidaSpeedSlider = new javax.swing.JSlider();
        radiusSlider = new javax.swing.JSlider();
        aValueTF = new javax.swing.JTextField();
        bValueTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        radiusLabel = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();
        drawingArea2 = new DrawingArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        subStartLabel = new javax.swing.JLabel();
        haidaStartLabel = new javax.swing.JLabel();
        apartLabel = new javax.swing.JLabel();
        interceptLabel = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        drawingArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawingArea1MousePressed(evt);
            }
        });

        subSpeedSlider.setMajorTickSpacing(1);
        subSpeedSlider.setMaximum(8);
        subSpeedSlider.setMinimum(6);
        subSpeedSlider.setPaintLabels(true);
        subSpeedSlider.setPaintTicks(true);
        subSpeedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                subSpeedSliderStateChanged(evt);
            }
        });

        haidaSpeedSlider.setMajorTickSpacing(2);
        haidaSpeedSlider.setMaximum(38);
        haidaSpeedSlider.setMinimum(30);
        haidaSpeedSlider.setMinorTickSpacing(1);
        haidaSpeedSlider.setPaintLabels(true);
        haidaSpeedSlider.setPaintTicks(true);

        radiusSlider.setMajorTickSpacing(1);
        radiusSlider.setMaximum(5);
        radiusSlider.setMinimum(1);
        radiusSlider.setPaintLabels(true);
        radiusSlider.setPaintTicks(true);
        radiusSlider.setSnapToTicks(true);

        aValueTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aValueTFActionPerformed(evt);
            }
        });

        bValueTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bValueTFActionPerformed(evt);
            }
        });

        jLabel1.setText("y =");

        jLabel2.setText("*");

        jLabel3.setText("a");

        jLabel4.setText("b");

        jLabel5.setText("^x");

        jLabel6.setText("Sub Speed (kts)");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("----------------------");

        jLabel8.setText("Haida Speed (kts)");

        radiusLabel.setText("Max Search Radius (x100 px)");

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        drawingArea2.setPreferredSize(new java.awt.Dimension(700, 460));

        jLabel10.setText("(0,0)");

        jLabel11.setText("(700,460)");

        javax.swing.GroupLayout drawingArea2Layout = new javax.swing.GroupLayout(drawingArea2);
        drawingArea2.setLayout(drawingArea2Layout);
        drawingArea2Layout.setHorizontalGroup(
            drawingArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea2Layout.createSequentialGroup()
                .addGap(0, 640, Short.MAX_VALUE)
                .addComponent(jLabel11))
            .addGroup(drawingArea2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(drawingArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingArea2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(drawingArea2Layout.createSequentialGroup()
                        .addGroup(drawingArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(subStartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(haidaStartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(drawingArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(apartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(interceptLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        drawingArea2Layout.setVerticalGroup(
            drawingArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingArea2Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(186, 186, 186)
                .addComponent(subStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(haidaStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(apartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(interceptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jLabel11))
        );

        clearButton.setText("clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout drawingArea1Layout = new javax.swing.GroupLayout(drawingArea1);
        drawingArea1.setLayout(drawingArea1Layout);
        drawingArea1Layout.setHorizontalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingArea1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingArea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                        .addComponent(subSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                            .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(radiusSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(drawingArea1Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(clearButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quitButton)))
                            .addGap(14, 14, 14))
                        .addGroup(drawingArea1Layout.createSequentialGroup()
                            .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(drawingArea1Layout.createSequentialGroup()
                                    .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(aValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(12, 12, 12)
                                            .addComponent(jLabel2)
                                            .addGap(12, 12, 12)
                                            .addComponent(bValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(76, 76, 76)
                                            .addComponent(jLabel4)
                                            .addGap(24, 24, 24))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(94, 94, 94))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(drawingArea1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel8))
                                            .addComponent(jLabel7)))
                                    .addGap(13, 13, 13)
                                    .addComponent(jLabel5))
                                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(drawingArea1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(radiusLabel))
                                    .addGroup(drawingArea1Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(haidaSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addContainerGap()))))
        );
        drawingArea1Layout.setVerticalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingArea1Layout.createSequentialGroup()
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawingArea1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel6))
                    .addGroup(drawingArea1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(searchButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bValueTF, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(haidaSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radiusLabel)
                .addGap(18, 18, 18)
                .addComponent(radiusSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitButton)
                    .addComponent(clearButton)))
            .addGroup(drawingArea1Layout.createSequentialGroup()
                .addComponent(drawingArea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(drawingArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aValueTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aValueTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aValueTFActionPerformed

    private void bValueTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bValueTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bValueTFActionPerformed

    private void subSpeedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_subSpeedSliderStateChanged
        // TODO add your handling code here:
        
        //jSliderX.getValue(); //gets the value from the slider
        
        
    }//GEN-LAST:event_subSpeedSliderStateChanged

    private void drawingArea1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingArea1MousePressed
        //getting the mouse position
        PointerInfo a = MouseInfo.getPointerInfo();
        Point b = a.getLocation();
        
        if(!subPressed && !haidaPressed){//setting sub coor first 
        xSub = (int)b.getX()-drawingArea2.getLocationOnScreen().x;
        ySub = (int)b.getY()-drawingArea2.getLocationOnScreen().y;
        subStartLabel.setText("Sub starts at: ("+xSub+","+ySub+")");//printing the position
        subPressed = true;
        }else if(!haidaPressed && subPressed){//setting haida coor
        xHaida = (int)b.getX()-drawingArea2.getLocationOnScreen().x;
        yHaida = (int)b.getY()-drawingArea2.getLocationOnScreen().y;
        haidaStartLabel.setText("Haida starts at: ("+xHaida+","+yHaida+")");//printing the position 
        haidaPressed = true;
        }
        
    }//GEN-LAST:event_drawingArea1MousePressed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        //getting values
        subSpeed = subSpeedSlider.getValue();
        haidaSpeed = haidaSpeedSlider.getValue();
        int radius = radiusSlider.getValue()*100;
        boolean goodA = false;
        boolean goodB = false; 
        double aValue = 0;
        double bValue = 0;
        boolean pressed = false;
        
        int x = 0;
        int y = 0;
        int pos = 0;
        
        //error checking 
        String aValueStr = aValueTF.getText();
        goodA = typeVerify(aValueStr, typeArr[1]);
        String bValueStr = bValueTF.getText(); 
        goodB = typeVerify(bValueStr, typeArr[1]);
        if(goodA&& goodB){//if a and b values are good 
            pressed = true;//button has been pressed (starts drawing)
        aValue = Double.parseDouble(aValueStr);//must be between -5 and +5 in increments of 0.5 (.5/.0 accepted)
        bValue = Double.parseDouble(bValueStr);//must be between 0.7 and 2 by increments of 0.1 (only 1 decimal place)
        draw.subPosition(x,y,xSub,ySub,aValue,bValue,pos);//bringing values to drawing area 
        draw.getRadius(radius);//setting radius 
        draw.searchPressed(pressed);
        draw.getSSpeed(subSpeed);//setting speeds from the sliders 
        draw.getHSpeed(haidaSpeed);
        
        }else{//if a or b value were not good 
        aValueTF.setText("");
        bValueTF.setText("");
        }
        
        
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
       System.exit(0);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        //clearing the screen for the next run 
        aValueTF.setText("");
        bValueTF.setText("");
        subStartLabel.setText("");
        haidaStartLabel.setText("");
        apartLabel.setText("");
        interceptLabel.setText("");
        xSub = 0;
        ySub = 0;
        xHaida = 0;
        yHaida = 0;
        draw.clear();
        subPressed = false;
        haidaPressed = false; 
       
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aValueTF;
    public static javax.swing.JLabel apartLabel;
    private javax.swing.JTextField bValueTF;
    private javax.swing.JButton clearButton;
    private DrawingArea drawingArea1;
    private DrawingArea drawingArea2;
    private javax.swing.JSlider haidaSpeedSlider;
    private javax.swing.JLabel haidaStartLabel;
    public static javax.swing.JLabel interceptLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton quitButton;
    private javax.swing.JLabel radiusLabel;
    private javax.swing.JSlider radiusSlider;
    private javax.swing.JButton searchButton;
    private javax.swing.JSlider subSpeedSlider;
    private javax.swing.JLabel subStartLabel;
    // End of variables declaration//GEN-END:variables
}
